model UserTextActivity {
  id        Int      @id(map: "core_user_text_activity_pkey") @default(autoincrement())
  userId    String
  guildId   String
  messageId String
  channelId String
  timestamp DateTime @db.Timestamp(6)
  guild     Guild    @relation(fields: [guildId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "userTextActivity_guildId_guild_id_fk")
  user      User     @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "userTextActivity_userId_users_id_fk")

  @@map("userTextActivity")
}

/// Stores completed voice chat session data for analytics
/// Created when a user leaves a voice channel or moves to a different channel
/// This record should not be modified after creation
model VoiceSession {
  id        Int      @id @default(autoincrement())
  channelId String
  joinedAt  DateTime
  leftAt    DateTime
  userId    String
  guildId   String
  totals    Int[] // Array of total time spent in a combination of each state (muted, deafened, video, streaming).
  user      User     @relation(fields: [userId], references: [id])
  guild     Guild    @relation(fields: [guildId], references: [id])
}

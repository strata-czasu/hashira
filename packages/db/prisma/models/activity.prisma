model UserTextActivity {
  id        Int      @id(map: "core_user_text_activity_pkey") @default(autoincrement())
  userId    String
  guildId   String
  messageId String
  channelId String
  timestamp DateTime @db.Timestamp(6)
  guild     Guild    @relation(fields: [guildId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "userTextActivity_guildId_guild_id_fk")
  user      User     @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "userTextActivity_userId_users_id_fk")

  @@map("userTextActivity")
}

/// Created when a user leaves a voice channel or moves to a different channel
/// This record or its children should not be modified after creation
model VoiceSession {
  id        Int                 @id @default(autoincrement())
  channelId String
  joinedAt  DateTime
  leftAt    DateTime
  userId    String
  guildId   String
  user      User                @relation(fields: [userId], references: [id])
  guild     Guild               @relation(fields: [guildId], references: [id])
  totals    VoiceSessionTotal[]
}

model VoiceSessionTotal {
  id             Int     @id @default(autoincrement())
  isMuted        Boolean
  isDeafened     Boolean
  isStreaming    Boolean
  isVideo        Boolean
  secondsSpent   Int
  voiceSessionId Int

  voiceSession VoiceSession @relation(fields: [voiceSessionId], references: [id])
}
